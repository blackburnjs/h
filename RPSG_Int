mport tkinter as tk
from tkinter import *

import RPSG

class RPSG_I():
    def __init__(self):
        self.draws = 0
        self.c_wins = 0
        self.p_wins = 0
        self.root = tk.Tk()
        self.root.geometry('400x400')
        self.frame = Frame(self.root)
        self.frame2 = Frame(self.root)
        self.frame3 = Frame(self.root)
        self.var = tk.StringVar()
        self.var.set('')
        self.text = tk.StringVar()
        self.text.set('')
        self.rad1 = tk.Radiobutton(self.frame, text="Rock", variable=self.var, value='rock', tristatevalue=0)
        self.rad2 = tk.Radiobutton(self.frame, text="Paper", variable=self.var, value='paper', tristatevalue=0)
        self.rad3 = tk.Radiobutton(self.frame, text="Scissors", variable=self.var, value='scissors', tristatevalue=0)
        self.label = tk.Label(self.frame3, textvariable=self.text)
        self.draw_text = tk.StringVar()
        self.draw_text.set('Draw: 0')
        self.computer_text = tk.StringVar()
        self.computer_text.set('Computer: 0')
        self.player_text = tk.StringVar()
        self.player_text.set('Player: 0')
        self.d_label = tk.Label(self.frame3, textvariable=self.draw_text)
        self.p_label = tk.Label(self.frame3, textvariable=self.player_text)
        self.c_label = tk.Label(self.frame3, textvariable=self.computer_text)
        self.play_button = tk.Button(self.frame2,
                                text = "Play",
                                command = lambda: self.result_return(self.var))
        self.quit_button = tk.Button(self.frame2, text = 'Quit', command = lambda: self.quit())
        self.frame.pack()
        self.frame2.pack()
        self.frame3.pack()
        self.rad1.pack()
        self.rad2.pack()
        self.rad3.pack()
        self.play_button.pack(side=LEFT)
        self.quit_button.pack(side = LEFT)
        self.label.pack()
        self.d_label.pack()
        self.c_label.pack()
        self.p_label.pack()
        self.root.mainloop()
    def result_return(self, v):
        winner = RPSG.RPSG_Code(v.get())
        print(winner)
        if 'Draw.' in winner:
            self.draws += 1
            self.draw_text.set(f'Draw: {str(self.draws)}')
            self.text.set(winner)
        elif 'You' in winner:
            self.p_wins += 1
            self.player_text.set(f'Player: {str(self.p_wins)}')
            self.text.set(winner)
        else:
            self.c_wins += 1
            self.computer_text.set(f'Computer: {str(self.c_wins)}')
            self.text.set(winner)
    def quit(self):
        self.root.destroy()

app = RPSG_I()
